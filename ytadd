#

# intent add current url to yturl.txt


if echo "$1" | grep -q 'https*:/'; then
  url="$1"
  shift
fi
tag="$*"
export IPFS_PATH=${IPFS_PATH:-$HOME/.../ipfs/*/MEDIA}
store=${IPFS_PATH}/filestore
if [ ! -d $store ]; then exit $(expr $$ % 251); fi
cd $store

echo "--- # $0"
echo "tag: \"$tag\""
echo "store: \"$store\""

if [ "x$url" = 'x' ]; then

if wmctrl -a "YouTube -"; then
browser=" YouTube -"
else
browser=" - Brave"
#wmctrl -a $browser
fi

WID=$(xdotool search --name "$browser" | tail -1)
echo "WID: $WID"
name="$(xdotool getwindowname $WID)"
echo "$WID: $name"
xdotool windowfocus $WID 
#xdotool key "Alt+Tab"
xdotool getmouselocation --shell | sed -e 's/=/: /'
# see [*](https://support.brave.com/hc/en-us/articles/360032272171-What-keyboard-shortcuts-can-I-use-in-Brave-)
#xdotool Click 3
xdotool key "alt+d"
xdotool key 0xff1b
xdotool key "ctrl+l"
xdotool key 0xff1b
xdotool key "ctrl+c"
xdotool key "ctrl+a"
xdotool key "ctrl+c"
url=$(xclip -o -selection c )
fi
echo "URL: $url"

tic=$(date +%s)
#ip=$(curl -s https://dynâ„ .ml/cgi-bin/remote_addr.pl)
mtime=$(stat -c %Y ~/.ip)
if expr $tic \- 3600 \> $mtime 1>/dev/null; then
ip=$(curl -s https://postman-echo.com/ip?format=text)
echo $ip > ~/.ip
else
ip=$(cat ~/.ip)
fi
echo ip: $ip

main(){

peerid=$(ipms config Identity.PeerID)
echo peerid: $peerid

if echo $url | grep -q -i "v=.*"; then
 echo "youtube: $url"
 vid=$(perl -e 'if ("'$url'" =~ m/v=([-\w]+)/) { print $1; }')
else if echo $url | grep -q "ytnoad\."; then
 vid=$(perl -e 'if ("'$url'" =~ m,#([-\w]+),) { print $1; }')
 url="https://youtu.be/$vid"
 echo "ytnoad: $url"
else if echo $url | grep -q "youtu.be/.*"; then
 echo "youtu.be: $url"
 vid=$(perl -e 'if ("'$url'" =~ m,\.be/([-\w]+),) { print $1; }')
else if echo $url | grep -q "bitchute.com/video/.*"; then
 echo "bitchute: $url"
 vid=$(perl -e 'if ("'$url'" =~ m,bitchute.com/([-\w]+),) { print $1; }')
else if echo $url | grep -q "ytimg.com/.*"; then
 vid=$(perl -e 'if ("'$url'" =~ m,ytimg.com/[^/]+/([^/]+),) { print $1; }')
 url=https://youtu.be/$vid
 echo "ytimg: $url"
fi
fi
fi
fi
fi

echo "noad_url: https://ytube.netlify.app/ytnoad.htm#$vid"
echo "altc_url: https://altcensured.caom/watch?=$vid"

eval "$(perl -S contkey.pl -y $url | eyml)"
echo id7: $id7

if [ "x$vid" == 'x' ]; then
exit
fi
# --------------------------------------------
echo $url >> /media/IPFS/MEDIA/filestore/yturls.txt
# --------------------------------------------
cat >ytadd.yml <<EOF
--- # yt add: url ...
name: "$name"
vid: $vid
id7: $id7
tag: "$tag"
url: $url
tic: $tic
ip: $ip
peerid: "$peerid"
EOF
cat >ytadd.url <<EOF
[InternetShortcut]
URL="https://ytube.netlify.app/ytnoad.htm#$vid"
REFERER="$url"
MEMO="$tag"
EOF
# --------------------------------------------
cat >ytadd.desktop <<EOF
[Desktop Entry]
Version=1.0
StartupNotify=true
GenericName=$tag
Name=$name
Icon=/mnt/usb/images/icons/ytadd.png
Comment=$vid, $tag
Exec=xdg-open "https://ytube.netlify.app/ytnoad.htm#$vid"
URL=$url
Type=Link
Teminal=false
X-ip=$ip
X-tic=$tic
X-peerid=$peerid
Categories=bookmark;Network;
EOF
# --------------------------------------------

qm=$(ipfs add -Q -w ytadd.desktop ytadd.yml ytadd.url)
#rm -f ytadd.yml
echo "qm: $qm"
if ! ipfs files stat --hash /var/yturl 1>/dev/null; then
ipfs files mkdir -p /var/yturl
fi
if ipfs files rm -r /var/yturl/added-$id7 2>/dev/null; then true; fi
ipfs files cp /ipfs/$qm /var/yturl/added-$id7
ipfsappend /var/yturl/urls.log "$tic: $qm; $tag"
yt=$(ipfs files stat /var/yturl --hash)
echo url: https://gateway.ipfs.io/ipfs/$yt/;

echo url: https://gateway.ipfs.io/ipfs/$qm;
curl -s -I https://gateway.ipfs.io/ipfs/$qm 1>/dev/null 2>&1 &

}

ipfsappend(){
   file="$1"
   string="$2"
   tmpf=/tmp/${file##*/}
   mdir=${file%/*}
   if ! ipms files stat --hash $mdir 1>/dev/null 2>&1; then
      ipms files mkdir -p $mdir
   fi
   if prev=$(ipms files stat --hash ${file} 2>/dev/null); then
      echo prev: $prev
      sz=$(ipms files stat --format="<size>" ${file} 2>/dev/null)
      echo size: $sz
      ipms files read "${file}" | sed -e "s/\$Previous: .*\$/\$Previous: $prev\$/" > $tmpf
      echo "$string" >> $tmpf
      ipms files write --create "${file}" < $tmpf
   else 
      genesis=z83ajSANGx6FnQqFaaELyCGFFtrxZKM3C
      ipms files write --create --raw-leaves "${file}" <<EOF
--- # blockRing for ${file##*/}
# \$Source: ${file}$
# \$Author: ${peerid}$
# \$Previous: ${genesis}$
$string
EOF
   fi
   qm=$(ipfs files stat --hash ${file})
   echo log: $qm

   rm -f $tmpf
}
  
main $@
exit $?

